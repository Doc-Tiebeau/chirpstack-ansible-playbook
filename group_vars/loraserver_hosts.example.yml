iptables:
  public_tcp_ports:
    - 22
    - 80

mosquitto:
  allow_connections_from:
    - your.ip.address.here
  mosquitto_auth_plug:
    db:
      host: localhost
      port: 5432
      dbname: loraserver_as
      user: loraserver_as
      pass: loraserver_as
    users:
      -
        user: loraserver_gw
        password: loraserver_gw
        topics:
          - write gateway/+/stats
          - write gateway/+/rx
          - read gateway/+/tx
      -
        user: loraserver_ns
        password: loraserver_ns
        topics:
          - read gateway/+/stats
          - write gateway/+/tx
          - read gateway/+/rx
      -
        user: loraserver_as
        password: loraserver_as
        topics:
          - write application/+/node/+/rx
          - write application/+/node/+/join
          - write application/+/node/+/ack
          - write application/+/node/+/error
          - read application/+/node/+/tx
  listeners:
    -
      bind_address: 0.0.0.0
      bind_port: 1883
      protocol: mqtt
    -
      bind_address: 0.0.0.0
      bind_port: 1884
      protocol: websockets

postgresql:
  # Don't forget to update the POSTGRES_DSN for each service!
  databases:
    - name: loraserver_as
      user: loraserver_as
      password: loraserver_as
    - name: loraserver_ns
      user: loraserver_ns
      password: loraserver_ns

lora_gateway_bridge:
  allow_connections_from:
    - your.ip.address.here
  configuration:
    MQTT_USERNAME: loraserver_gw
    MQTT_PASSWORD: loraserver_gw

loraserver:
  configuration:
    BAND: EU_863_870
    NET_ID: "010203"
    POSTGRES_DSN: postgres://loraserver_ns:loraserver_ns@localhost/loraserver_ns?sslmode=disable
    LOG_NODE_FRAMES: True
    GW_MQTT_USERNAME: loraserver_ns
    GW_MQTT_PASSWORD: loraserver_ns

lora_app_server:
  allow_connections_from:
    - your.ip.address.here
  tls_certificate:
    domain: example.com
    email: info@example.com
    # Set accept_letsencrypt_tos to True if you accept the LE terms of service
    # and to request a free TLS certificate, see https://letsencrypt.org
    accept_letsencrypt_tos: False
  configuration:
    POSTGRES_DSN: postgres://loraserver_as:loraserver_as@localhost/loraserver_as?sslmode=disable
    HTTP_BIND: 0.0.0.0:443
    # You could use 'openssl rand -base64 32' to generate a random secret
    # JWT_SECRET: secret here
    MQTT_USERNAME: loraserver_as
    MQTT_PASSWORD: loraserver_as
