# The ports that are accessible from any IP
iptables:
  public_tcp_ports:
    - 22
    - 80
    # This port is used by LoRa Gateway Config to fetch gateway configuration.
    # Requests are authenticated with a token.
    - 8002

# Mosquitto specific configuration
mosquitto:
  # IP addresses that are whitelisted to connect to Mosquitto.
  # Use 0.0.0.0/0 to allow any IP.
  allow_connections_from:
    - your.ip.address.here
  mosquitto_auth_plug:
    # Integrate Mosquitto auth plug with LoRa App Server. This enables users
    # to login with their own credentials to gain access to the data of the
    # applications to which they are assigned and/or that are part of the
    # organizations to which the they belong.
    lora_app_server_integration: True
    # The database to which mosquitto-auth-plug connects for LoRa App Server
    # integration. This should be equal to the database to which
    # LoRa App Server connects.
    db:
      host: localhost
      port: 5432
      dbname: loraserver_as
      user: loraserver_as
      pass: loraserver_as
    # Static credentials for MQTT authentication / authorization.
    # Make sure to change the passwords and change them also in the
    # configuration of lora_gateway_bridge, loraserver and lora_app_server!
    users:
      -
        user: loraserver_gw
        password: loraserver_gw
        topics:
          - write gateway/+/stats
          - write gateway/+/rx
          - read gateway/+/tx
      -
        user: loraserver_ns
        password: loraserver_ns
        topics:
          - read gateway/+/stats
          - write gateway/+/tx
          - read gateway/+/rx
      -
        user: loraserver_as
        password: loraserver_as
        topics:
          - write application/+/node/+/rx
          - write application/+/node/+/join
          - write application/+/node/+/ack
          - write application/+/node/+/error
          - read application/+/node/+/tx
  # MQTT listeners (to support both MQTT and websockets protocol)
  listeners:
    -
      bind_address: 0.0.0.0
      bind_port: 1883
      protocol: mqtt
    -
      bind_address: 0.0.0.0
      bind_port: 1884
      protocol: websockets

# PostgreSQL specific configuration
postgresql:
  # The database which should be created.
  # Make sure to change each password and dont forget to update the POSTGRES_DSN
  # of each service using the database!
  databases:
    - name: loraserver_as
      user: loraserver_as
      password: loraserver_as
    - name: loraserver_ns
      user: loraserver_ns
      password: loraserver_ns

# LoRa Gateway Bridge specific configuration.
lora_gateway_bridge:
  # IP addresses that are whitelisted to connect to LoRa Gateway Bridge.
  # Use 0.0.0.0/0 to allow any IP.
  allow_connections_from:
    - your.ip.address.here

# LoRa App Server specific configuration.
lora_app_server:
  # IP addresses that are whitelisted to connect to LoRa App Server.
  # Use 0.0.0.0/0 to allow any IP.
  allow_connections_from:
    - your.ip.address.here
  # Configuration used when requesting a TLS certificate from LetsEncrypt.
  # Set accept_letsencrypt_tos to True if you accept the LE terms of service
  # and to request a free TLS certificate, see https://letsencrypt.org.
  # Note that the domain must resolve to the IP of your server!
  tls_certificate:
    domain: example.com
    email: info@example.com
    accept_letsencrypt_tos: False
